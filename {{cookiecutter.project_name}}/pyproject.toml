[tool.poetry]
name = "{{cookiecutter.package_name}}"
packages = [
    { include = "src/{{cookiecutter.package_name}}" },
]
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
authors = ["{{ cookiecutter.author }}"]
license = "{{cookiecutter.license}}"
readme = "README.md"
homepage = "{{cookiecutter.homepage}}"
repository = "https://github.com/{{cookiecutter.github_user}}/{{cookiecutter.github_project_name}}/"
keywords = [
    "Poetry",
    "Virtual Environments",
    "Nox",
    "Python",
    "black",
    "flake8",
    "mypy",
    "pytest",
    "safety",
    "fastapi"
]
[tool.poetry.dependencies]
python = "^3.7.1,<3.11"
flake8-import-order = "^0.18.1"
click = "^8.0.1"
typer = "^0.4.0"
ipympl = "^0.8.0"
uvicorn = "^0.17.1"
fastapi = "^0.73.0"
alembic = "^1.7.5"
requests = "^2.27.1"

[tool.poetry.dev-dependencies]
black = "^20.8b1"
flake8 = "^3.9.0"
mypy = "^0.812"
pytest = "^6.2.2"
pytest-cov = "^2.11.1"
coverage = { extras = ["toml"], version = "^5.5" }
nox-poetry = "^0.8.4"
flake8-black = "^0.2.1"
flake8-bugbear = "^21.3.2"
flake8-bandit = "^2.1.2"
safety = "^1.10.3"
flake8-annotations = "^2.6.1"

[tool.black]
line-length = 121
exclude = '''
(
  \.git
  | \.idea
  | \.mypy_cache
  | \.pytest_cache
  | envs
)
'''

[tool.pytest.ini_options]
testpaths = [
    "test",
]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.package_name}}"]

[tool.coverage.report]
show_missing = true
fail_under = 100
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

